name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
    - uses: actions/checkout@v4
    - name: gradle 볼륨 권한 주기
      run: |
        sudo chown -R gradle:gradle /home/gradle/.gradle
        sudo chmod -R 777 /home/gradle/.gradle
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'adopt'

    - name: Set up SSH
      uses: webfactory/ssh-agent@v0.5.4
      with:
        ssh-private-key: ${{ secrets.PRIVATE_KEY }}

    - name: Copy files to EC2
      run: |
        scp -r -o StrictHostKeyChecking=no ./* ubuntu@${{ secrets.HOST }}:/home/ubuntu/backend/docker_backend

    - name: EC2에서 디렉토리 생성 및 권한 설정
      run: |
        ssh -o StrictHostKeyChecking=no ubuntu@${{ secrets.HOST }} << 'EOF'
          sudo mkdir -p /home/ubuntu/backend/docker_backend/db
          sudo chown -R $USER:$USER /home/ubuntu/backend/docker_backend
        EOF

    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@v4

    - name: Cache Gradle packages
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle

    - name: chmod +x gradlew
      run: chmod +x gradlew

    - name: Build with Gradle Wrapper
      run: ./gradlew clean build

    - name: 도커 Compose 실행
      run: |
        ssh -o StrictHostKeyChecking=no ubuntu@${{ secrets.HOST }} << 'EOF'
          cd /home/ubuntu/backend/docker_backend
          sudo docker-compose down
          sudo docker-compose up -d --build
        EOF
